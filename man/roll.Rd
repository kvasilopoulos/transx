% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/081-roll.R
\name{roll_idx}
\alias{roll_idx}
\alias{roll}
\alias{roll_data}
\title{Rolling operations}
\usage{
roll_idx(
  x,
  n = 1,
  step = 1,
  align = c("left", "center", "right"),
  complete = TRUE
)

roll(
  x,
  fn,
  n = 1L,
  step = 1L,
  fill = NA,
  align = c("left", "center", "right"),
  ...
)

roll_data(x, n = 1L, step = 1L, align = c("left", "center", "right"))
}
\arguments{
\item{x}{\verb{[univariate vector]}

Univariate vector, numeric or ts object with only one dimension.}

\item{n}{\verb{[positive integer(1):1L]}

Window size.}

\item{step}{\verb{[positive integer(1):1L]}

Rolling window step.}

\item{align}{\verb{[character(1): "left"]}

Specifying whether the index of the result should be left- or right-aligned
or centered (default) compared to the rolling window of observations.}

\item{fn}{\verb{[function]}}

\item{fill}{\verb{[numeric or function: NA]}

Numeric value(s) or function used to fill observations.}

\item{...}{Further arguments passed to the function \code{fn}.}
}
\value{
\itemize{
\item \code{roll()}: returns a vector with the same class and attributes as the input vector.
\item \code{roll_idx()}: Returns the index that is used to calculate the subsets.
\item \code{roll_data()}: Returns a list subsets of length length(x)/step.
}
}
\description{
Apply rolling operations over a moving window for size \code{n} and increment \code{step}.
}
\examples{

# x is odd

roll_idx(1:9, 2, 1, align = "left")
roll_idx(1:9, 2, 1, align = "center")
roll_idx(1:9, 2, 1, align = "right") # reduces

# This works
roll_idx(1:9, 3, 1, align = "left")
roll_idx(1:9, 3, 1, align = "center")
roll_idx(1:9, 3, 1, align = "right")

roll_idx(1:9, 2, 2, align = "left")
roll_idx(1:9, 2, 2, align = "center")
roll_idx(1:9, 2, 2, align = "right")

roll_idx(1:9, 3, 2, align = "left")
roll_idx(1:9, 3, 2, align = "center")
roll_idx(1:9, 3, 2, align = "right") # reduces

# x is even

roll_idx(1:8, 2, 2, align = "left")
roll_idx(1:8, 2, 2, align = "center")
roll_idx(1:8, 2, 2, align = "right") # reduces

roll_idx(1:8, 2, 1, align = "left")
roll_idx(1:8, 2, 1, align = "center")
roll_idx(1:8, 2, 1, align = "right")

roll_idx(1:8, 3, 1, align = "left")
roll_idx(1:8, 3, 1, align = "center")
roll_idx(1:8, 3, 1, align = "right") # reduces

roll_idx(1:8, 3, 1, align = "left")
roll_idx(1:8, 3, 1, align = "center")
roll_idx(1:8, 3, 1, align = "right") # reduces


x <- seq(10, 1, -1)

roll_data(x, 2, align = "left")
roll_data(x, 2, align = "right")

roll(x, max, 3)
roll(x, max, 3, align = "right")


x <- 1:6
roll_data(x, 2)
roll(x, mean, 2)

roll_data(x, 2, 2)
roll(x, mean, 2, 2)
}
