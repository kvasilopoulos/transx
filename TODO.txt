seas_

- [ ] decomp_bn(): Beveridge-Nelson decomposition

## Smoothers

sm_*

2. Local smoothers

- [ ] smooth_holt_winters: Holt Winters - https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/HoltWinters
- [ ] smooth_exp(): Expontential Smoothin
- [ ] smooth_ma():
- [ ] smooth_mm():
- [ ] smooth_gaussian:
- [ ] smooth_wiener:
- [ ] smooth_kalman() :
- [ ] smooth_nn: Nearest neighbor smoother
- [ ] smooth_kernel(): Kernel smoothers
- [ ] smooth_spline(): Smoothing splines
- [ ] sm_loess(): LOESS (locally estimated scatterplot smoother)

## Resampling

- [ ] resample():
- [ ] resample_norm():
- [ ] resample_rad():
- [ ] resample_mammen():

## Window Operations

Apply the univariate functions you use repeatedly to the sub-data sets in your full data set. You can see packages `slider` and the now depracated function in `tsibble`.

### Recursive

Expanding window

roll_*

You can also see the package `cumstats`.

### Rolling

Rolling window. You can see also packages `RcppRoll` and the `zoo`.


### Block

Window that creates non-overlapping blocks



# Benchmark later when everything is in c++

microbenchmark::microbenchmark(
  RcppRoll::roll_max(x),
  zoo::rollmax(x, 1),
  roll_max(x)
)

microbenchmark::microbenchmark(
  cumstats::cummean(x),
  rec_fn(x, mean)
)

microbenchmark::microbenchmark(
  slider::slide(x, mean),
  roll_fn(x, mean)
)

x = c(1,2,3,4,5)
microbenchmark::microbenchmark(
rec_fn(x, mean),
rec_mean(x)
)
)


